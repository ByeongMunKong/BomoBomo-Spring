<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.bomobomo.mapper.ReviewMapper">

<select id="selectServiceReviewAll" resultType="sitterBoardVo">

    select rnum, SITTER_BOARD_NUMBER, user_number, user_id, EMP_NUMBER,SITTER_BOARD_CONTENT,
    SITTER_BOARD_REGISTER_DATE,
    SITTER_BOARD_MODIFY_DATE, RATING, SITTER_BOARD_COUNT, EMP_NAME
    from(
        select rownum as rnum, SITTER_BOARD_NUMBER, user_number, user_id, EMP_NUMBER,SITTER_BOARD_CONTENT,
        SITTER_BOARD_REGISTER_DATE,
        SITTER_BOARD_MODIFY_DATE, RATING, SITTER_BOARD_COUNT, EMP_NAME
    from (
        select  s.SITTER_BOARD_NUMBER, s.user_number, u.user_id,s.EMP_NUMBER,SITTER_BOARD_CONTENT,
        SITTER_BOARD_REGISTER_DATE,
        SITTER_BOARD_MODIFY_DATE, RATING, SITTER_BOARD_COUNT, e.EMP_NAME
        from SITTER_BOARD s join users u
        on s.user_number = u.user_number
        join emp e
        on s.EMP_NUMBER = e.EMP_NUMBER
        <if test="'sitterName'.equals(searchReviewVo.cate)">
            where emp_name Like '%'|| #{searchReviewVo.keyword} ||'%'
        </if>


        order by SITTER_BOARD_NUMBER desc
    )  <![CDATA[
        where rownum<=#{criteria.page} * #{criteria.amount}
                  ]]>


    )where rnum> (#{criteria.page}-1) * #{criteria.amount}

--이미지 들어오면 사용할 쿼리
<!--    select rnum, SITTER_BOARD_NUMBER, user_number, user_id, EMP_NUMBER,SITTER_BOARD_CONTENT,-->
<!--    SITTER_BOARD_REGISTER_DATE,-->
<!--    SITTER_BOARD_MODIFY_DATE, RATING, SITTER_BOARD_COUNT, EMP_NAME, emp_img_UPLOAD_PATH,-->
<!--    emp_img_UUID,-->
<!--    emp_img_NAME-->
<!--    from (-->
<!--    select rownum as rnum, SITTER_BOARD_NUMBER, user_number, user_id, EMP_NUMBER,-->
<!--    SITTER_BOARD_CONTENT, SITTER_BOARD_REGISTER_DATE, SITTER_BOARD_MODIFY_DATE,-->
<!--    RATING, SITTER_BOARD_COUNT, EMP_NAME, emp_img_UPLOAD_PATH, emp_img_UUID, emp_img_NAME-->
<!--    from (-->
<!--    select s.SITTER_BOARD_NUMBER, s.user_number, u.user_id, s.EMP_NUMBER,-->
<!--    SITTER_BOARD_CONTENT, SITTER_BOARD_REGISTER_DATE, SITTER_BOARD_MODIFY_DATE,-->
<!--    RATING, SITTER_BOARD_COUNT, e.EMP_NAME,-->
<!--    emp_img_UPLOAD_PATH, emp_img_UUID, emp_img_NAME-->
<!--    from SITTER_BOARD s-->
<!--    join users u on s.user_number = u.user_number-->
<!--    join emp e on s.EMP_NUMBER = e.EMP_NUMBER-->
<!--    left outer join (-->
<!--    select emp_img_UPLOAD_PATH,-->
<!--    emp_img_UUID,-->
<!--    emp_img_NAME,-->
<!--    EMP_NUMBER,-->
<!--    rank() over (partition by EMP_NUMBER order by EMP_IMG_NUMBER) RK-->
<!--    from emp_img-->
<!--    )J1-->
<!--    on s.emp_number = J1.emp_number-->
<!--    where RK = 1-->
<!--    order by SITTER_BOARD_NUMBER desc-->
<!--    )Y-->
<!--    <![CDATA[-->
<!--                                where rownum<=#{page} #{amount}-->
<!--                                            ]]>-->
<!--    ) X-->
<!--    where rnum> (#{page}-1)*#{amount}-->
<!--    <if test="'sitterName'.equals(searchReviewVo.cate)">-->
<!--        where emp_name Like '%'|| #{searchReviewVo.keyword} ||'%'-->
<!--    </if>-->


</select>


    <select id="getTotal" resultType="_int">

        select count(sitter_board_number)
        from (
                select SITTER_BOARD_NUMBER, EMP_NAME
                from SITTER_BOARD s join emp e
                on s.emp_number = e.EMP_NUMBER
             )
        <if test="'sitterName'.equals(cate)">
        where emp_name Like '%' || #{keyword} ||'%'
        </if>

    </select>




    <select id="getAvgRating" parameterType="Long" resultType="double">

        select avg(rating)
        from SITTER_BOARD
        where EMP_NUMBER = #{empNumber}

    </select>


    <select id="selectOne" resultType="sitterBoardVo">

        select SITTER_BOARD_NUMBER, s.USER_NUMBER, s.EMP_NUMBER, u.USER_id, SITTER_BOARD_CONTENT,
               SITTER_BOARD_REGISTER_DATE, SITTER_BOARD_MODIFY_DATE, rating, SITTER_BOARD_COUNT, e.EMP_NAME
        from SITTER_BOARD s join users u on s.USER_NUMBER = u.USER_number
                            join emp e on s.EMP_NUMBER = e.EMP_NUMBER
        where SITTER_BOARD_NUMBER= #{sitterBoardNumber}



    </select>



    <select id="updateCount" parameterType="Long">

        update sitter_board
        set sitter_board_count = sitter_board_count +1
        where sitter_board_number = #{sitterBoardNumber}

    </select>



    <delete id="delete">

        delete from sitter_board
        where SITTER_BOARD_NUMBER = #{sitterBoardNumber}

    </delete>

    <select id="sample">

        --이미지 들어오면 사용할 쿼리
--         select SITTER_BOARD_NUMBER, s.USER_NUMBER, s.EMP_NUMBER, u.USER_id, SITTER_BOARD_CONTENT,
--                SITTER_BOARD_REGISTER_DATE, SITTER_BOARD_MODIFY_DATE, rating, SITTER_BOARD_COUNT, e.EMP_NAME, emp_img_UPLOAD_PATH,
--                emp_img_UUID, emp_img_NAME
--         from SITTER_BOARD s join users u on s.USER_NUMBER = u.USER_number
--                             join emp e on s.EMP_NUMBER = e.EMP_NUMBER
--                             left outer join emp_img k on e.EMP_NUMBER = k.emp_number
--         where SITTER_BOARD_NUMBER= #{sitterBoardNumber};

    </select>



</mapper>